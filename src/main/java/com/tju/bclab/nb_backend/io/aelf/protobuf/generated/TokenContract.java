// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: token_contract.proto

package com.tju.bclab.nb_backend.io.aelf.protobuf.generated;

public final class TokenContract {
  private TokenContract() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TokenInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TokenInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of the token.f
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of the token.f
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The full name of the token.
     * </pre>
     *
     * <code>string token_name = 2;</code>
     * @return The tokenName.
     */
    String getTokenName();
    /**
     * <pre>
     * The full name of the token.
     * </pre>
     *
     * <code>string token_name = 2;</code>
     * @return The bytes for tokenName.
     */
    com.google.protobuf.ByteString
        getTokenNameBytes();

    /**
     * <pre>
     * The current supply of the token.
     * </pre>
     *
     * <code>int64 supply = 3;</code>
     * @return The supply.
     */
    long getSupply();

    /**
     * <pre>
     * The total supply of the token.
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     * @return The totalSupply.
     */
    long getTotalSupply();

    /**
     * <pre>
     * The precision of the token.
     * </pre>
     *
     * <code>int32 decimals = 5;</code>
     * @return The decimals.
     */
    int getDecimals();

    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     * @return Whether the issuer field is set.
     */
    boolean hasIssuer();
    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     * @return The issuer.
     */
    Client.Address getIssuer();
    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     */
    Client.AddressOrBuilder getIssuerOrBuilder();

    /**
     * <pre>
     * A flag indicating if this token is burnable.
     * </pre>
     *
     * <code>bool is_burnable = 7;</code>
     * @return The isBurnable.
     */
    boolean getIsBurnable();

    /**
     * <pre>
     * The chain id of the token.
     * </pre>
     *
     * <code>int32 issue_chain_id = 8;</code>
     * @return The issueChainId.
     */
    int getIssueChainId();

    /**
     * <pre>
     * The amount of issued tokens.
     * </pre>
     *
     * <code>int64 issued = 9;</code>
     * @return The issued.
     */
    long getIssued();
  }
  /**
   * <pre>
   *tokenContract
   * </pre>
   *
   * Protobuf type {@code TokenInfo}
   */
  public  static final class TokenInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TokenInfo)
      TokenInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TokenInfo.newBuilder() to construct.
    private TokenInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenInfo() {
      symbol_ = "";
      tokenName_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TokenInfo();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TokenInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              tokenName_ = s;
              break;
            }
            case 24: {

              supply_ = input.readInt64();
              break;
            }
            case 32: {

              totalSupply_ = input.readInt64();
              break;
            }
            case 40: {

              decimals_ = input.readInt32();
              break;
            }
            case 50: {
              Client.Address.Builder subBuilder = null;
              if (issuer_ != null) {
                subBuilder = issuer_.toBuilder();
              }
              issuer_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(issuer_);
                issuer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              isBurnable_ = input.readBool();
              break;
            }
            case 64: {

              issueChainId_ = input.readInt32();
              break;
            }
            case 72: {

              issued_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_TokenInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_TokenInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TokenInfo.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of the token.f
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of the token.f
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_NAME_FIELD_NUMBER = 2;
    private volatile Object tokenName_;
    /**
     * <pre>
     * The full name of the token.
     * </pre>
     *
     * <code>string token_name = 2;</code>
     * @return The tokenName.
     */
    public String getTokenName() {
      Object ref = tokenName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tokenName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The full name of the token.
     * </pre>
     *
     * <code>string token_name = 2;</code>
     * @return The bytes for tokenName.
     */
    public com.google.protobuf.ByteString
        getTokenNameBytes() {
      Object ref = tokenName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tokenName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUPPLY_FIELD_NUMBER = 3;
    private long supply_;
    /**
     * <pre>
     * The current supply of the token.
     * </pre>
     *
     * <code>int64 supply = 3;</code>
     * @return The supply.
     */
    public long getSupply() {
      return supply_;
    }

    public static final int TOTAL_SUPPLY_FIELD_NUMBER = 4;
    private long totalSupply_;
    /**
     * <pre>
     * The total supply of the token.
     * </pre>
     *
     * <code>int64 total_supply = 4;</code>
     * @return The totalSupply.
     */
    public long getTotalSupply() {
      return totalSupply_;
    }

    public static final int DECIMALS_FIELD_NUMBER = 5;
    private int decimals_;
    /**
     * <pre>
     * The precision of the token.
     * </pre>
     *
     * <code>int32 decimals = 5;</code>
     * @return The decimals.
     */
    public int getDecimals() {
      return decimals_;
    }

    public static final int ISSUER_FIELD_NUMBER = 6;
    private Client.Address issuer_;
    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     * @return Whether the issuer field is set.
     */
    public boolean hasIssuer() {
      return issuer_ != null;
    }
    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     * @return The issuer.
     */
    public Client.Address getIssuer() {
      return issuer_ == null ? Client.Address.getDefaultInstance() : issuer_;
    }
    /**
     * <pre>
     * The address that created the token.
     * </pre>
     *
     * <code>.Address issuer = 6;</code>
     */
    public Client.AddressOrBuilder getIssuerOrBuilder() {
      return getIssuer();
    }

    public static final int IS_BURNABLE_FIELD_NUMBER = 7;
    private boolean isBurnable_;
    /**
     * <pre>
     * A flag indicating if this token is burnable.
     * </pre>
     *
     * <code>bool is_burnable = 7;</code>
     * @return The isBurnable.
     */
    public boolean getIsBurnable() {
      return isBurnable_;
    }

    public static final int ISSUE_CHAIN_ID_FIELD_NUMBER = 8;
    private int issueChainId_;
    /**
     * <pre>
     * The chain id of the token.
     * </pre>
     *
     * <code>int32 issue_chain_id = 8;</code>
     * @return The issueChainId.
     */
    public int getIssueChainId() {
      return issueChainId_;
    }

    public static final int ISSUED_FIELD_NUMBER = 9;
    private long issued_;
    /**
     * <pre>
     * The amount of issued tokens.
     * </pre>
     *
     * <code>int64 issued = 9;</code>
     * @return The issued.
     */
    public long getIssued() {
      return issued_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (!getTokenNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tokenName_);
      }
      if (supply_ != 0L) {
        output.writeInt64(3, supply_);
      }
      if (totalSupply_ != 0L) {
        output.writeInt64(4, totalSupply_);
      }
      if (decimals_ != 0) {
        output.writeInt32(5, decimals_);
      }
      if (issuer_ != null) {
        output.writeMessage(6, getIssuer());
      }
      if (isBurnable_ != false) {
        output.writeBool(7, isBurnable_);
      }
      if (issueChainId_ != 0) {
        output.writeInt32(8, issueChainId_);
      }
      if (issued_ != 0L) {
        output.writeInt64(9, issued_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (!getTokenNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tokenName_);
      }
      if (supply_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, supply_);
      }
      if (totalSupply_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, totalSupply_);
      }
      if (decimals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, decimals_);
      }
      if (issuer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getIssuer());
      }
      if (isBurnable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isBurnable_);
      }
      if (issueChainId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, issueChainId_);
      }
      if (issued_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, issued_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TokenInfo)) {
        return super.equals(obj);
      }
      TokenInfo other = (TokenInfo) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (!getTokenName()
          .equals(other.getTokenName())) return false;
      if (getSupply()
          != other.getSupply()) return false;
      if (getTotalSupply()
          != other.getTotalSupply()) return false;
      if (getDecimals()
          != other.getDecimals()) return false;
      if (hasIssuer() != other.hasIssuer()) return false;
      if (hasIssuer()) {
        if (!getIssuer()
            .equals(other.getIssuer())) return false;
      }
      if (getIsBurnable()
          != other.getIsBurnable()) return false;
      if (getIssueChainId()
          != other.getIssueChainId()) return false;
      if (getIssued()
          != other.getIssued()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + TOKEN_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTokenName().hashCode();
      hash = (37 * hash) + SUPPLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSupply());
      hash = (37 * hash) + TOTAL_SUPPLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalSupply());
      hash = (37 * hash) + DECIMALS_FIELD_NUMBER;
      hash = (53 * hash) + getDecimals();
      if (hasIssuer()) {
        hash = (37 * hash) + ISSUER_FIELD_NUMBER;
        hash = (53 * hash) + getIssuer().hashCode();
      }
      hash = (37 * hash) + IS_BURNABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsBurnable());
      hash = (37 * hash) + ISSUE_CHAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIssueChainId();
      hash = (37 * hash) + ISSUED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIssued());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TokenInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TokenInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TokenInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TokenInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TokenInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TokenInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TokenInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *tokenContract
     * </pre>
     *
     * Protobuf type {@code TokenInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TokenInfo)
        TokenInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_TokenInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_TokenInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TokenInfo.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.TokenInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        tokenName_ = "";

        supply_ = 0L;

        totalSupply_ = 0L;

        decimals_ = 0;

        if (issuerBuilder_ == null) {
          issuer_ = null;
        } else {
          issuer_ = null;
          issuerBuilder_ = null;
        }
        isBurnable_ = false;

        issueChainId_ = 0;

        issued_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_TokenInfo_descriptor;
      }

      @Override
      public TokenInfo getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public TokenInfo build() {
        TokenInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TokenInfo buildPartial() {
        TokenInfo result = new TokenInfo(this);
        result.symbol_ = symbol_;
        result.tokenName_ = tokenName_;
        result.supply_ = supply_;
        result.totalSupply_ = totalSupply_;
        result.decimals_ = decimals_;
        if (issuerBuilder_ == null) {
          result.issuer_ = issuer_;
        } else {
          result.issuer_ = issuerBuilder_.build();
        }
        result.isBurnable_ = isBurnable_;
        result.issueChainId_ = issueChainId_;
        result.issued_ = issued_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TokenInfo) {
          return mergeFrom((TokenInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TokenInfo other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (!other.getTokenName().isEmpty()) {
          tokenName_ = other.tokenName_;
          onChanged();
        }
        if (other.getSupply() != 0L) {
          setSupply(other.getSupply());
        }
        if (other.getTotalSupply() != 0L) {
          setTotalSupply(other.getTotalSupply());
        }
        if (other.getDecimals() != 0) {
          setDecimals(other.getDecimals());
        }
        if (other.hasIssuer()) {
          mergeIssuer(other.getIssuer());
        }
        if (other.getIsBurnable() != false) {
          setIsBurnable(other.getIsBurnable());
        }
        if (other.getIssueChainId() != 0) {
          setIssueChainId(other.getIssueChainId());
        }
        if (other.getIssued() != 0L) {
          setIssued(other.getIssued());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TokenInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TokenInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of the token.f
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of the token.f
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of the token.f
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of the token.f
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of the token.f
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Object tokenName_ = "";
      /**
       * <pre>
       * The full name of the token.
       * </pre>
       *
       * <code>string token_name = 2;</code>
       * @return The tokenName.
       */
      public String getTokenName() {
        Object ref = tokenName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tokenName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The full name of the token.
       * </pre>
       *
       * <code>string token_name = 2;</code>
       * @return The bytes for tokenName.
       */
      public com.google.protobuf.ByteString
          getTokenNameBytes() {
        Object ref = tokenName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tokenName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The full name of the token.
       * </pre>
       *
       * <code>string token_name = 2;</code>
       * @param value The tokenName to set.
       * @return This builder for chaining.
       */
      public Builder setTokenName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tokenName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full name of the token.
       * </pre>
       *
       * <code>string token_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenName() {
        
        tokenName_ = getDefaultInstance().getTokenName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The full name of the token.
       * </pre>
       *
       * <code>string token_name = 2;</code>
       * @param value The bytes for tokenName to set.
       * @return This builder for chaining.
       */
      public Builder setTokenNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tokenName_ = value;
        onChanged();
        return this;
      }

      private long supply_ ;
      /**
       * <pre>
       * The current supply of the token.
       * </pre>
       *
       * <code>int64 supply = 3;</code>
       * @return The supply.
       */
      public long getSupply() {
        return supply_;
      }
      /**
       * <pre>
       * The current supply of the token.
       * </pre>
       *
       * <code>int64 supply = 3;</code>
       * @param value The supply to set.
       * @return This builder for chaining.
       */
      public Builder setSupply(long value) {
        
        supply_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The current supply of the token.
       * </pre>
       *
       * <code>int64 supply = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSupply() {
        
        supply_ = 0L;
        onChanged();
        return this;
      }

      private long totalSupply_ ;
      /**
       * <pre>
       * The total supply of the token.
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @return The totalSupply.
       */
      public long getTotalSupply() {
        return totalSupply_;
      }
      /**
       * <pre>
       * The total supply of the token.
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @param value The totalSupply to set.
       * @return This builder for chaining.
       */
      public Builder setTotalSupply(long value) {
        
        totalSupply_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total supply of the token.
       * </pre>
       *
       * <code>int64 total_supply = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalSupply() {
        
        totalSupply_ = 0L;
        onChanged();
        return this;
      }

      private int decimals_ ;
      /**
       * <pre>
       * The precision of the token.
       * </pre>
       *
       * <code>int32 decimals = 5;</code>
       * @return The decimals.
       */
      public int getDecimals() {
        return decimals_;
      }
      /**
       * <pre>
       * The precision of the token.
       * </pre>
       *
       * <code>int32 decimals = 5;</code>
       * @param value The decimals to set.
       * @return This builder for chaining.
       */
      public Builder setDecimals(int value) {
        
        decimals_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The precision of the token.
       * </pre>
       *
       * <code>int32 decimals = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDecimals() {
        
        decimals_ = 0;
        onChanged();
        return this;
      }

      private Client.Address issuer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> issuerBuilder_;
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       * @return Whether the issuer field is set.
       */
      public boolean hasIssuer() {
        return issuerBuilder_ != null || issuer_ != null;
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       * @return The issuer.
       */
      public Client.Address getIssuer() {
        if (issuerBuilder_ == null) {
          return issuer_ == null ? Client.Address.getDefaultInstance() : issuer_;
        } else {
          return issuerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Builder setIssuer(Client.Address value) {
        if (issuerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          issuer_ = value;
          onChanged();
        } else {
          issuerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Builder setIssuer(
          Client.Address.Builder builderForValue) {
        if (issuerBuilder_ == null) {
          issuer_ = builderForValue.build();
          onChanged();
        } else {
          issuerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Builder mergeIssuer(Client.Address value) {
        if (issuerBuilder_ == null) {
          if (issuer_ != null) {
            issuer_ =
              Client.Address.newBuilder(issuer_).mergeFrom(value).buildPartial();
          } else {
            issuer_ = value;
          }
          onChanged();
        } else {
          issuerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Builder clearIssuer() {
        if (issuerBuilder_ == null) {
          issuer_ = null;
          onChanged();
        } else {
          issuer_ = null;
          issuerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Client.Address.Builder getIssuerBuilder() {
        
        onChanged();
        return getIssuerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      public Client.AddressOrBuilder getIssuerOrBuilder() {
        if (issuerBuilder_ != null) {
          return issuerBuilder_.getMessageOrBuilder();
        } else {
          return issuer_ == null ?
              Client.Address.getDefaultInstance() : issuer_;
        }
      }
      /**
       * <pre>
       * The address that created the token.
       * </pre>
       *
       * <code>.Address issuer = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getIssuerFieldBuilder() {
        if (issuerBuilder_ == null) {
          issuerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getIssuer(),
                  getParentForChildren(),
                  isClean());
          issuer_ = null;
        }
        return issuerBuilder_;
      }

      private boolean isBurnable_ ;
      /**
       * <pre>
       * A flag indicating if this token is burnable.
       * </pre>
       *
       * <code>bool is_burnable = 7;</code>
       * @return The isBurnable.
       */
      public boolean getIsBurnable() {
        return isBurnable_;
      }
      /**
       * <pre>
       * A flag indicating if this token is burnable.
       * </pre>
       *
       * <code>bool is_burnable = 7;</code>
       * @param value The isBurnable to set.
       * @return This builder for chaining.
       */
      public Builder setIsBurnable(boolean value) {
        
        isBurnable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A flag indicating if this token is burnable.
       * </pre>
       *
       * <code>bool is_burnable = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsBurnable() {
        
        isBurnable_ = false;
        onChanged();
        return this;
      }

      private int issueChainId_ ;
      /**
       * <pre>
       * The chain id of the token.
       * </pre>
       *
       * <code>int32 issue_chain_id = 8;</code>
       * @return The issueChainId.
       */
      public int getIssueChainId() {
        return issueChainId_;
      }
      /**
       * <pre>
       * The chain id of the token.
       * </pre>
       *
       * <code>int32 issue_chain_id = 8;</code>
       * @param value The issueChainId to set.
       * @return This builder for chaining.
       */
      public Builder setIssueChainId(int value) {
        
        issueChainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The chain id of the token.
       * </pre>
       *
       * <code>int32 issue_chain_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIssueChainId() {
        
        issueChainId_ = 0;
        onChanged();
        return this;
      }

      private long issued_ ;
      /**
       * <pre>
       * The amount of issued tokens.
       * </pre>
       *
       * <code>int64 issued = 9;</code>
       * @return The issued.
       */
      public long getIssued() {
        return issued_;
      }
      /**
       * <pre>
       * The amount of issued tokens.
       * </pre>
       *
       * <code>int64 issued = 9;</code>
       * @param value The issued to set.
       * @return This builder for chaining.
       */
      public Builder setIssued(long value) {
        
        issued_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amount of issued tokens.
       * </pre>
       *
       * <code>int64 issued = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIssued() {
        
        issued_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TokenInfo)
    }

    // @@protoc_insertion_point(class_scope:TokenInfo)
    private static final TokenInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TokenInfo();
    }

    public static TokenInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenInfo>
        PARSER = new com.google.protobuf.AbstractParser<TokenInfo>() {
      @Override
      public TokenInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TokenInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TokenInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public TokenInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetTokenInfoInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetTokenInfoInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();
  }
  /**
   * Protobuf type {@code GetTokenInfoInput}
   */
  public  static final class GetTokenInfoInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetTokenInfoInput)
      GetTokenInfoInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetTokenInfoInput.newBuilder() to construct.
    private GetTokenInfoInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetTokenInfoInput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetTokenInfoInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetTokenInfoInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetTokenInfoInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetTokenInfoInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetTokenInfoInput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetTokenInfoInput)) {
        return super.equals(obj);
      }
      GetTokenInfoInput other = (GetTokenInfoInput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetTokenInfoInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetTokenInfoInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetTokenInfoInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetTokenInfoInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetTokenInfoInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetTokenInfoInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetTokenInfoInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetTokenInfoInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetTokenInfoInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetTokenInfoInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetTokenInfoInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetTokenInfoInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetTokenInfoInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetTokenInfoInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetTokenInfoInput)
        GetTokenInfoInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetTokenInfoInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetTokenInfoInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetTokenInfoInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetTokenInfoInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetTokenInfoInput_descriptor;
      }

      @Override
      public GetTokenInfoInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetTokenInfoInput build() {
        GetTokenInfoInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetTokenInfoInput buildPartial() {
        GetTokenInfoInput result = new GetTokenInfoInput(this);
        result.symbol_ = symbol_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetTokenInfoInput) {
          return mergeFrom((GetTokenInfoInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetTokenInfoInput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetTokenInfoInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetTokenInfoInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetTokenInfoInput)
    }

    // @@protoc_insertion_point(class_scope:GetTokenInfoInput)
    private static final GetTokenInfoInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetTokenInfoInput();
    }

    public static GetTokenInfoInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetTokenInfoInput>
        PARSER = new com.google.protobuf.AbstractParser<GetTokenInfoInput>() {
      @Override
      public GetTokenInfoInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetTokenInfoInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetTokenInfoInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetTokenInfoInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetTokenInfoInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenInfoListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TokenInfoList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    java.util.List<TokenInfo>
        getValueList();
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    TokenInfo getValue(int index);
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    int getValueCount();
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    java.util.List<? extends TokenInfoOrBuilder>
        getValueOrBuilderList();
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    TokenInfoOrBuilder getValueOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code TokenInfoList}
   */
  public  static final class TokenInfoList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TokenInfoList)
      TokenInfoListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TokenInfoList.newBuilder() to construct.
    private TokenInfoList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenInfoList() {
      value_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TokenInfoList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TokenInfoList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                value_ = new java.util.ArrayList<TokenInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(
                  input.readMessage(TokenInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_TokenInfoList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_TokenInfoList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TokenInfoList.class, Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<TokenInfo> value_;
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    public java.util.List<TokenInfo> getValueList() {
      return value_;
    }
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    public java.util.List<? extends TokenInfoOrBuilder>
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    public TokenInfo getValue(int index) {
      return value_.get(index);
    }
    /**
     * <pre>
     * List of token information.
     * </pre>
     *
     * <code>repeated .TokenInfo value = 1;</code>
     */
    public TokenInfoOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(1, value_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, value_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TokenInfoList)) {
        return super.equals(obj);
      }
      TokenInfoList other = (TokenInfoList) obj;

      if (!getValueList()
          .equals(other.getValueList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TokenInfoList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfoList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TokenInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TokenInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TokenInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TokenInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TokenInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TokenInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TokenInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TokenInfoList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TokenInfoList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TokenInfoList)
        TokenInfoListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_TokenInfoList_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_TokenInfoList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TokenInfoList.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.TokenInfoList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valueBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_TokenInfoList_descriptor;
      }

      @Override
      public TokenInfoList getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public TokenInfoList build() {
        TokenInfoList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TokenInfoList buildPartial() {
        TokenInfoList result = new TokenInfoList(this);
        int from_bitField0_ = bitField0_;
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TokenInfoList) {
          return mergeFrom((TokenInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TokenInfoList other) {
        if (other == getDefaultInstance()) return this;
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TokenInfoList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TokenInfoList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<TokenInfo> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          value_ = new java.util.ArrayList<TokenInfo>(value_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TokenInfo, TokenInfo.Builder, TokenInfoOrBuilder> valueBuilder_;

      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public java.util.List<TokenInfo> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public TokenInfo getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder setValue(
          int index, TokenInfo value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder setValue(
          int index, TokenInfo.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder addValue(TokenInfo value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder addValue(
          int index, TokenInfo value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder addValue(
          TokenInfo.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder addValue(
          int index, TokenInfo.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder addAllValue(
          Iterable<? extends TokenInfo> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public TokenInfo.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public TokenInfoOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public java.util.List<? extends TokenInfoOrBuilder>
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public TokenInfo.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            TokenInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public TokenInfo.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, TokenInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * List of token information.
       * </pre>
       *
       * <code>repeated .TokenInfo value = 1;</code>
       */
      public java.util.List<TokenInfo.Builder>
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TokenInfo, TokenInfo.Builder, TokenInfoOrBuilder>
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TokenInfo, TokenInfo.Builder, TokenInfoOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TokenInfoList)
    }

    // @@protoc_insertion_point(class_scope:TokenInfoList)
    private static final TokenInfoList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TokenInfoList();
    }

    public static TokenInfoList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenInfoList>
        PARSER = new com.google.protobuf.AbstractParser<TokenInfoList>() {
      @Override
      public TokenInfoList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TokenInfoList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenInfoList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TokenInfoList> getParserForType() {
      return PARSER;
    }

    @Override
    public TokenInfoList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetBalanceInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetBalanceInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    boolean hasOwner();
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    Client.Address getOwner();
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    Client.AddressOrBuilder getOwnerOrBuilder();
  }
  /**
   * Protobuf type {@code GetBalanceInput}
   */
  public  static final class GetBalanceInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetBalanceInput)
      GetBalanceInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetBalanceInput.newBuilder() to construct.
    private GetBalanceInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetBalanceInput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetBalanceInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetBalanceInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              Client.Address.Builder subBuilder = null;
              if (owner_ != null) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetBalanceInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetBalanceInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetBalanceInput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private Client.Address owner_;
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    public Client.Address getOwner() {
      return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    public Client.AddressOrBuilder getOwnerOrBuilder() {
      return getOwner();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (owner_ != null) {
        output.writeMessage(2, getOwner());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetBalanceInput)) {
        return super.equals(obj);
      }
      GetBalanceInput other = (GetBalanceInput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasOwner() != other.hasOwner()) return false;
      if (hasOwner()) {
        if (!getOwner()
            .equals(other.getOwner())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetBalanceInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetBalanceInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetBalanceInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetBalanceInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetBalanceInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetBalanceInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetBalanceInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetBalanceInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetBalanceInput)
        GetBalanceInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetBalanceInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetBalanceInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetBalanceInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetBalanceInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetBalanceInput_descriptor;
      }

      @Override
      public GetBalanceInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetBalanceInput build() {
        GetBalanceInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetBalanceInput buildPartial() {
        GetBalanceInput result = new GetBalanceInput(this);
        result.symbol_ = symbol_;
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetBalanceInput) {
          return mergeFrom((GetBalanceInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetBalanceInput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetBalanceInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetBalanceInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Address owner_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> ownerBuilder_;
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return Whether the owner field is set.
       */
      public boolean hasOwner() {
        return ownerBuilder_ != null || owner_ != null;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return The owner.
       */
      public Client.Address getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(
          Client.Address.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder mergeOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (owner_ != null) {
            owner_ =
              Client.Address.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.Address.Builder getOwnerBuilder() {
        
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.AddressOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              Client.Address.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetBalanceInput)
    }

    // @@protoc_insertion_point(class_scope:GetBalanceInput)
    private static final GetBalanceInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetBalanceInput();
    }

    public static GetBalanceInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetBalanceInput>
        PARSER = new com.google.protobuf.AbstractParser<GetBalanceInput>() {
      @Override
      public GetBalanceInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetBalanceInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetBalanceInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetBalanceInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetBalanceInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetBalanceOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetBalanceOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    boolean hasOwner();
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    Client.Address getOwner();
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    Client.AddressOrBuilder getOwnerOrBuilder();

    /**
     * <pre>
     * The balance of the owner.
     * </pre>
     *
     * <code>int64 balance = 3;</code>
     * @return The balance.
     */
    long getBalance();
  }
  /**
   * Protobuf type {@code GetBalanceOutput}
   */
  public  static final class GetBalanceOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetBalanceOutput)
      GetBalanceOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetBalanceOutput.newBuilder() to construct.
    private GetBalanceOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetBalanceOutput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetBalanceOutput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetBalanceOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              Client.Address.Builder subBuilder = null;
              if (owner_ != null) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              balance_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetBalanceOutput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetBalanceOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetBalanceOutput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private Client.Address owner_;
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    public Client.Address getOwner() {
      return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     * The target address of the query.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    public Client.AddressOrBuilder getOwnerOrBuilder() {
      return getOwner();
    }

    public static final int BALANCE_FIELD_NUMBER = 3;
    private long balance_;
    /**
     * <pre>
     * The balance of the owner.
     * </pre>
     *
     * <code>int64 balance = 3;</code>
     * @return The balance.
     */
    public long getBalance() {
      return balance_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (owner_ != null) {
        output.writeMessage(2, getOwner());
      }
      if (balance_ != 0L) {
        output.writeInt64(3, balance_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      if (balance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, balance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetBalanceOutput)) {
        return super.equals(obj);
      }
      GetBalanceOutput other = (GetBalanceOutput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasOwner() != other.hasOwner()) return false;
      if (hasOwner()) {
        if (!getOwner()
            .equals(other.getOwner())) return false;
      }
      if (getBalance()
          != other.getBalance()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBalance());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetBalanceOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetBalanceOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetBalanceOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetBalanceOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetBalanceOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetBalanceOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetBalanceOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetBalanceOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetBalanceOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetBalanceOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetBalanceOutput)
        GetBalanceOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetBalanceOutput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetBalanceOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetBalanceOutput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetBalanceOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }
        balance_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetBalanceOutput_descriptor;
      }

      @Override
      public GetBalanceOutput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetBalanceOutput build() {
        GetBalanceOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetBalanceOutput buildPartial() {
        GetBalanceOutput result = new GetBalanceOutput(this);
        result.symbol_ = symbol_;
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        result.balance_ = balance_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetBalanceOutput) {
          return mergeFrom((GetBalanceOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetBalanceOutput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        if (other.getBalance() != 0L) {
          setBalance(other.getBalance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetBalanceOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetBalanceOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Address owner_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> ownerBuilder_;
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return Whether the owner field is set.
       */
      public boolean hasOwner() {
        return ownerBuilder_ != null || owner_ != null;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return The owner.
       */
      public Client.Address getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(
          Client.Address.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder mergeOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (owner_ != null) {
            owner_ =
              Client.Address.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.Address.Builder getOwnerBuilder() {
        
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.AddressOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              Client.Address.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       * The target address of the query.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }

      private long balance_ ;
      /**
       * <pre>
       * The balance of the owner.
       * </pre>
       *
       * <code>int64 balance = 3;</code>
       * @return The balance.
       */
      public long getBalance() {
        return balance_;
      }
      /**
       * <pre>
       * The balance of the owner.
       * </pre>
       *
       * <code>int64 balance = 3;</code>
       * @param value The balance to set.
       * @return This builder for chaining.
       */
      public Builder setBalance(long value) {
        
        balance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The balance of the owner.
       * </pre>
       *
       * <code>int64 balance = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBalance() {
        
        balance_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetBalanceOutput)
    }

    // @@protoc_insertion_point(class_scope:GetBalanceOutput)
    private static final GetBalanceOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetBalanceOutput();
    }

    public static GetBalanceOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetBalanceOutput>
        PARSER = new com.google.protobuf.AbstractParser<GetBalanceOutput>() {
      @Override
      public GetBalanceOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetBalanceOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetBalanceOutput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetBalanceOutput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetBalanceOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAllowanceInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetAllowanceInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    boolean hasOwner();
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    Client.Address getOwner();
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    Client.AddressOrBuilder getOwnerOrBuilder();

    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return Whether the spender field is set.
     */
    boolean hasSpender();
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return The spender.
     */
    Client.Address getSpender();
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     */
    Client.AddressOrBuilder getSpenderOrBuilder();
  }
  /**
   * Protobuf type {@code GetAllowanceInput}
   */
  public  static final class GetAllowanceInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetAllowanceInput)
      GetAllowanceInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetAllowanceInput.newBuilder() to construct.
    private GetAllowanceInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetAllowanceInput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetAllowanceInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllowanceInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              Client.Address.Builder subBuilder = null;
              if (owner_ != null) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              Client.Address.Builder subBuilder = null;
              if (spender_ != null) {
                subBuilder = spender_.toBuilder();
              }
              spender_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spender_);
                spender_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetAllowanceInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetAllowanceInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetAllowanceInput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private Client.Address owner_;
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    public Client.Address getOwner() {
      return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    public Client.AddressOrBuilder getOwnerOrBuilder() {
      return getOwner();
    }

    public static final int SPENDER_FIELD_NUMBER = 3;
    private Client.Address spender_;
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return Whether the spender field is set.
     */
    public boolean hasSpender() {
      return spender_ != null;
    }
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return The spender.
     */
    public Client.Address getSpender() {
      return spender_ == null ? Client.Address.getDefaultInstance() : spender_;
    }
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     */
    public Client.AddressOrBuilder getSpenderOrBuilder() {
      return getSpender();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (owner_ != null) {
        output.writeMessage(2, getOwner());
      }
      if (spender_ != null) {
        output.writeMessage(3, getSpender());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      if (spender_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSpender());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetAllowanceInput)) {
        return super.equals(obj);
      }
      GetAllowanceInput other = (GetAllowanceInput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasOwner() != other.hasOwner()) return false;
      if (hasOwner()) {
        if (!getOwner()
            .equals(other.getOwner())) return false;
      }
      if (hasSpender() != other.hasSpender()) return false;
      if (hasSpender()) {
        if (!getSpender()
            .equals(other.getSpender())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      if (hasSpender()) {
        hash = (37 * hash) + SPENDER_FIELD_NUMBER;
        hash = (53 * hash) + getSpender().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetAllowanceInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetAllowanceInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetAllowanceInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetAllowanceInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetAllowanceInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetAllowanceInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetAllowanceInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetAllowanceInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetAllowanceInput)
        GetAllowanceInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetAllowanceInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetAllowanceInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetAllowanceInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetAllowanceInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }
        if (spenderBuilder_ == null) {
          spender_ = null;
        } else {
          spender_ = null;
          spenderBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetAllowanceInput_descriptor;
      }

      @Override
      public GetAllowanceInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetAllowanceInput build() {
        GetAllowanceInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetAllowanceInput buildPartial() {
        GetAllowanceInput result = new GetAllowanceInput(this);
        result.symbol_ = symbol_;
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        if (spenderBuilder_ == null) {
          result.spender_ = spender_;
        } else {
          result.spender_ = spenderBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetAllowanceInput) {
          return mergeFrom((GetAllowanceInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetAllowanceInput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        if (other.hasSpender()) {
          mergeSpender(other.getSpender());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetAllowanceInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetAllowanceInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Address owner_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> ownerBuilder_;
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return Whether the owner field is set.
       */
      public boolean hasOwner() {
        return ownerBuilder_ != null || owner_ != null;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return The owner.
       */
      public Client.Address getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(
          Client.Address.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder mergeOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (owner_ != null) {
            owner_ =
              Client.Address.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.Address.Builder getOwnerBuilder() {
        
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.AddressOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              Client.Address.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }

      private Client.Address spender_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> spenderBuilder_;
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       * @return Whether the spender field is set.
       */
      public boolean hasSpender() {
        return spenderBuilder_ != null || spender_ != null;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       * @return The spender.
       */
      public Client.Address getSpender() {
        if (spenderBuilder_ == null) {
          return spender_ == null ? Client.Address.getDefaultInstance() : spender_;
        } else {
          return spenderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder setSpender(Client.Address value) {
        if (spenderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spender_ = value;
          onChanged();
        } else {
          spenderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder setSpender(
          Client.Address.Builder builderForValue) {
        if (spenderBuilder_ == null) {
          spender_ = builderForValue.build();
          onChanged();
        } else {
          spenderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder mergeSpender(Client.Address value) {
        if (spenderBuilder_ == null) {
          if (spender_ != null) {
            spender_ =
              Client.Address.newBuilder(spender_).mergeFrom(value).buildPartial();
          } else {
            spender_ = value;
          }
          onChanged();
        } else {
          spenderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder clearSpender() {
        if (spenderBuilder_ == null) {
          spender_ = null;
          onChanged();
        } else {
          spender_ = null;
          spenderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Client.Address.Builder getSpenderBuilder() {
        
        onChanged();
        return getSpenderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Client.AddressOrBuilder getSpenderOrBuilder() {
        if (spenderBuilder_ != null) {
          return spenderBuilder_.getMessageOrBuilder();
        } else {
          return spender_ == null ?
              Client.Address.getDefaultInstance() : spender_;
        }
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getSpenderFieldBuilder() {
        if (spenderBuilder_ == null) {
          spenderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getSpender(),
                  getParentForChildren(),
                  isClean());
          spender_ = null;
        }
        return spenderBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetAllowanceInput)
    }

    // @@protoc_insertion_point(class_scope:GetAllowanceInput)
    private static final GetAllowanceInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetAllowanceInput();
    }

    public static GetAllowanceInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetAllowanceInput>
        PARSER = new com.google.protobuf.AbstractParser<GetAllowanceInput>() {
      @Override
      public GetAllowanceInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllowanceInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetAllowanceInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetAllowanceInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetAllowanceInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAllowanceOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetAllowanceOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    boolean hasOwner();
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    Client.Address getOwner();
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    Client.AddressOrBuilder getOwnerOrBuilder();

    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return Whether the spender field is set.
     */
    boolean hasSpender();
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return The spender.
     */
    Client.Address getSpender();
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     */
    Client.AddressOrBuilder getSpenderOrBuilder();

    /**
     * <pre>
     * The amount of allowance.
     * </pre>
     *
     * <code>int64 allowance = 4;</code>
     * @return The allowance.
     */
    long getAllowance();
  }
  /**
   * Protobuf type {@code GetAllowanceOutput}
   */
  public  static final class GetAllowanceOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetAllowanceOutput)
      GetAllowanceOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetAllowanceOutput.newBuilder() to construct.
    private GetAllowanceOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetAllowanceOutput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetAllowanceOutput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetAllowanceOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              Client.Address.Builder subBuilder = null;
              if (owner_ != null) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              Client.Address.Builder subBuilder = null;
              if (spender_ != null) {
                subBuilder = spender_.toBuilder();
              }
              spender_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spender_);
                spender_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              allowance_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetAllowanceOutput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetAllowanceOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetAllowanceOutput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private Client.Address owner_;
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return Whether the owner field is set.
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     * @return The owner.
     */
    public Client.Address getOwner() {
      return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     * The address of the token owner.
     * </pre>
     *
     * <code>.Address owner = 2;</code>
     */
    public Client.AddressOrBuilder getOwnerOrBuilder() {
      return getOwner();
    }

    public static final int SPENDER_FIELD_NUMBER = 3;
    private Client.Address spender_;
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return Whether the spender field is set.
     */
    public boolean hasSpender() {
      return spender_ != null;
    }
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     * @return The spender.
     */
    public Client.Address getSpender() {
      return spender_ == null ? Client.Address.getDefaultInstance() : spender_;
    }
    /**
     * <pre>
     * The address of the spender.
     * </pre>
     *
     * <code>.Address spender = 3;</code>
     */
    public Client.AddressOrBuilder getSpenderOrBuilder() {
      return getSpender();
    }

    public static final int ALLOWANCE_FIELD_NUMBER = 4;
    private long allowance_;
    /**
     * <pre>
     * The amount of allowance.
     * </pre>
     *
     * <code>int64 allowance = 4;</code>
     * @return The allowance.
     */
    public long getAllowance() {
      return allowance_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (owner_ != null) {
        output.writeMessage(2, getOwner());
      }
      if (spender_ != null) {
        output.writeMessage(3, getSpender());
      }
      if (allowance_ != 0L) {
        output.writeInt64(4, allowance_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      if (spender_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSpender());
      }
      if (allowance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, allowance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetAllowanceOutput)) {
        return super.equals(obj);
      }
      GetAllowanceOutput other = (GetAllowanceOutput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasOwner() != other.hasOwner()) return false;
      if (hasOwner()) {
        if (!getOwner()
            .equals(other.getOwner())) return false;
      }
      if (hasSpender() != other.hasSpender()) return false;
      if (hasSpender()) {
        if (!getSpender()
            .equals(other.getSpender())) return false;
      }
      if (getAllowance()
          != other.getAllowance()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      if (hasSpender()) {
        hash = (37 * hash) + SPENDER_FIELD_NUMBER;
        hash = (53 * hash) + getSpender().hashCode();
      }
      hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAllowance());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetAllowanceOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAllowanceOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAllowanceOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetAllowanceOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetAllowanceOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetAllowanceOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetAllowanceOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetAllowanceOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetAllowanceOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetAllowanceOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetAllowanceOutput)
        GetAllowanceOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetAllowanceOutput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetAllowanceOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetAllowanceOutput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetAllowanceOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }
        if (spenderBuilder_ == null) {
          spender_ = null;
        } else {
          spender_ = null;
          spenderBuilder_ = null;
        }
        allowance_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetAllowanceOutput_descriptor;
      }

      @Override
      public GetAllowanceOutput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetAllowanceOutput build() {
        GetAllowanceOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetAllowanceOutput buildPartial() {
        GetAllowanceOutput result = new GetAllowanceOutput(this);
        result.symbol_ = symbol_;
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        if (spenderBuilder_ == null) {
          result.spender_ = spender_;
        } else {
          result.spender_ = spenderBuilder_.build();
        }
        result.allowance_ = allowance_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetAllowanceOutput) {
          return mergeFrom((GetAllowanceOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetAllowanceOutput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        if (other.hasSpender()) {
          mergeSpender(other.getSpender());
        }
        if (other.getAllowance() != 0L) {
          setAllowance(other.getAllowance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetAllowanceOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetAllowanceOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Address owner_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> ownerBuilder_;
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return Whether the owner field is set.
       */
      public boolean hasOwner() {
        return ownerBuilder_ != null || owner_ != null;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       * @return The owner.
       */
      public Client.Address getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? Client.Address.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder setOwner(
          Client.Address.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder mergeOwner(Client.Address value) {
        if (ownerBuilder_ == null) {
          if (owner_ != null) {
            owner_ =
              Client.Address.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.Address.Builder getOwnerBuilder() {
        
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      public Client.AddressOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              Client.Address.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       * The address of the token owner.
       * </pre>
       *
       * <code>.Address owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }

      private Client.Address spender_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> spenderBuilder_;
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       * @return Whether the spender field is set.
       */
      public boolean hasSpender() {
        return spenderBuilder_ != null || spender_ != null;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       * @return The spender.
       */
      public Client.Address getSpender() {
        if (spenderBuilder_ == null) {
          return spender_ == null ? Client.Address.getDefaultInstance() : spender_;
        } else {
          return spenderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder setSpender(Client.Address value) {
        if (spenderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spender_ = value;
          onChanged();
        } else {
          spenderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder setSpender(
          Client.Address.Builder builderForValue) {
        if (spenderBuilder_ == null) {
          spender_ = builderForValue.build();
          onChanged();
        } else {
          spenderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder mergeSpender(Client.Address value) {
        if (spenderBuilder_ == null) {
          if (spender_ != null) {
            spender_ =
              Client.Address.newBuilder(spender_).mergeFrom(value).buildPartial();
          } else {
            spender_ = value;
          }
          onChanged();
        } else {
          spenderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Builder clearSpender() {
        if (spenderBuilder_ == null) {
          spender_ = null;
          onChanged();
        } else {
          spender_ = null;
          spenderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Client.Address.Builder getSpenderBuilder() {
        
        onChanged();
        return getSpenderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      public Client.AddressOrBuilder getSpenderOrBuilder() {
        if (spenderBuilder_ != null) {
          return spenderBuilder_.getMessageOrBuilder();
        } else {
          return spender_ == null ?
              Client.Address.getDefaultInstance() : spender_;
        }
      }
      /**
       * <pre>
       * The address of the spender.
       * </pre>
       *
       * <code>.Address spender = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getSpenderFieldBuilder() {
        if (spenderBuilder_ == null) {
          spenderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getSpender(),
                  getParentForChildren(),
                  isClean());
          spender_ = null;
        }
        return spenderBuilder_;
      }

      private long allowance_ ;
      /**
       * <pre>
       * The amount of allowance.
       * </pre>
       *
       * <code>int64 allowance = 4;</code>
       * @return The allowance.
       */
      public long getAllowance() {
        return allowance_;
      }
      /**
       * <pre>
       * The amount of allowance.
       * </pre>
       *
       * <code>int64 allowance = 4;</code>
       * @param value The allowance to set.
       * @return This builder for chaining.
       */
      public Builder setAllowance(long value) {
        
        allowance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amount of allowance.
       * </pre>
       *
       * <code>int64 allowance = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowance() {
        
        allowance_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetAllowanceOutput)
    }

    // @@protoc_insertion_point(class_scope:GetAllowanceOutput)
    private static final GetAllowanceOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetAllowanceOutput();
    }

    public static GetAllowanceOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetAllowanceOutput>
        PARSER = new com.google.protobuf.AbstractParser<GetAllowanceOutput>() {
      @Override
      public GetAllowanceOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetAllowanceOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetAllowanceOutput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetAllowanceOutput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetAllowanceOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IsInWhiteListInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IsInWhiteListInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The symbol of token. 
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The symbol of token. 
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     * @return Whether the address field is set.
     */
    boolean hasAddress();
    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     * @return The address.
     */
    Client.Address getAddress();
    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     */
    Client.AddressOrBuilder getAddressOrBuilder();
  }
  /**
   * Protobuf type {@code IsInWhiteListInput}
   */
  public  static final class IsInWhiteListInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IsInWhiteListInput)
      IsInWhiteListInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IsInWhiteListInput.newBuilder() to construct.
    private IsInWhiteListInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IsInWhiteListInput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new IsInWhiteListInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IsInWhiteListInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 18: {
              Client.Address.Builder subBuilder = null;
              if (address_ != null) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_IsInWhiteListInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_IsInWhiteListInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IsInWhiteListInput.class, Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile Object symbol_;
    /**
     * <pre>
     * The symbol of token. 
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbol of token. 
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_FIELD_NUMBER = 2;
    private Client.Address address_;
    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return address_ != null;
    }
    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     * @return The address.
     */
    public Client.Address getAddress() {
      return address_ == null ? Client.Address.getDefaultInstance() : address_;
    }
    /**
     * <pre>
     * The address to check.
     * </pre>
     *
     * <code>.Address address = 2;</code>
     */
    public Client.AddressOrBuilder getAddressOrBuilder() {
      return getAddress();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (address_ != null) {
        output.writeMessage(2, getAddress());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (address_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAddress());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IsInWhiteListInput)) {
        return super.equals(obj);
      }
      IsInWhiteListInput other = (IsInWhiteListInput) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasAddress() != other.hasAddress()) return false;
      if (hasAddress()) {
        if (!getAddress()
            .equals(other.getAddress())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IsInWhiteListInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IsInWhiteListInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IsInWhiteListInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IsInWhiteListInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IsInWhiteListInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IsInWhiteListInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IsInWhiteListInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IsInWhiteListInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static IsInWhiteListInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static IsInWhiteListInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IsInWhiteListInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IsInWhiteListInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IsInWhiteListInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code IsInWhiteListInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IsInWhiteListInput)
        IsInWhiteListInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_IsInWhiteListInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_IsInWhiteListInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IsInWhiteListInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.IsInWhiteListInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (addressBuilder_ == null) {
          address_ = null;
        } else {
          address_ = null;
          addressBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_IsInWhiteListInput_descriptor;
      }

      @Override
      public IsInWhiteListInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public IsInWhiteListInput build() {
        IsInWhiteListInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public IsInWhiteListInput buildPartial() {
        IsInWhiteListInput result = new IsInWhiteListInput(this);
        result.symbol_ = symbol_;
        if (addressBuilder_ == null) {
          result.address_ = address_;
        } else {
          result.address_ = addressBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IsInWhiteListInput) {
          return mergeFrom((IsInWhiteListInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IsInWhiteListInput other) {
        if (other == getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IsInWhiteListInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IsInWhiteListInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The symbol of token. 
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token. 
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbol of token. 
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token. 
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbol of token. 
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Address address_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> addressBuilder_;
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       * @return Whether the address field is set.
       */
      public boolean hasAddress() {
        return addressBuilder_ != null || address_ != null;
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       * @return The address.
       */
      public Client.Address getAddress() {
        if (addressBuilder_ == null) {
          return address_ == null ? Client.Address.getDefaultInstance() : address_;
        } else {
          return addressBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Builder setAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          address_ = value;
          onChanged();
        } else {
          addressBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Builder setAddress(
          Client.Address.Builder builderForValue) {
        if (addressBuilder_ == null) {
          address_ = builderForValue.build();
          onChanged();
        } else {
          addressBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Builder mergeAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (address_ != null) {
            address_ =
              Client.Address.newBuilder(address_).mergeFrom(value).buildPartial();
          } else {
            address_ = value;
          }
          onChanged();
        } else {
          addressBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Builder clearAddress() {
        if (addressBuilder_ == null) {
          address_ = null;
          onChanged();
        } else {
          address_ = null;
          addressBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Client.Address.Builder getAddressBuilder() {
        
        onChanged();
        return getAddressFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      public Client.AddressOrBuilder getAddressOrBuilder() {
        if (addressBuilder_ != null) {
          return addressBuilder_.getMessageOrBuilder();
        } else {
          return address_ == null ?
              Client.Address.getDefaultInstance() : address_;
        }
      }
      /**
       * <pre>
       * The address to check.
       * </pre>
       *
       * <code>.Address address = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getAddressFieldBuilder() {
        if (addressBuilder_ == null) {
          addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getAddress(),
                  getParentForChildren(),
                  isClean());
          address_ = null;
        }
        return addressBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IsInWhiteListInput)
    }

    // @@protoc_insertion_point(class_scope:IsInWhiteListInput)
    private static final IsInWhiteListInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IsInWhiteListInput();
    }

    public static IsInWhiteListInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IsInWhiteListInput>
        PARSER = new com.google.protobuf.AbstractParser<IsInWhiteListInput>() {
      @Override
      public IsInWhiteListInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IsInWhiteListInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IsInWhiteListInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IsInWhiteListInput> getParserForType() {
      return PARSER;
    }

    @Override
    public IsInWhiteListInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLockedAmountInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetLockedAmountInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    boolean hasAddress();
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    Client.Address getAddress();
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    Client.AddressOrBuilder getAddressOrBuilder();

    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return Whether the lockId field is set.
     */
    boolean hasLockId();
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return The lockId.
     */
    Client.Hash getLockId();
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     */
    Client.HashOrBuilder getLockIdOrBuilder();
  }
  /**
   * Protobuf type {@code GetLockedAmountInput}
   */
  public  static final class GetLockedAmountInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetLockedAmountInput)
      GetLockedAmountInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLockedAmountInput.newBuilder() to construct.
    private GetLockedAmountInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLockedAmountInput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLockedAmountInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLockedAmountInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Client.Address.Builder subBuilder = null;
              if (address_ != null) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 26: {
              Client.Hash.Builder subBuilder = null;
              if (lockId_ != null) {
                subBuilder = lockId_.toBuilder();
              }
              lockId_ = input.readMessage(Client.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lockId_);
                lockId_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetLockedAmountInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetLockedAmountInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetLockedAmountInput.class, Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    private Client.Address address_;
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return address_ != null;
    }
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    public Client.Address getAddress() {
      return address_ == null ? Client.Address.getDefaultInstance() : address_;
    }
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    public Client.AddressOrBuilder getAddressOrBuilder() {
      return getAddress();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile Object symbol_;
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCK_ID_FIELD_NUMBER = 3;
    private Client.Hash lockId_;
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return Whether the lockId field is set.
     */
    public boolean hasLockId() {
      return lockId_ != null;
    }
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return The lockId.
     */
    public Client.Hash getLockId() {
      return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
    }
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     */
    public Client.HashOrBuilder getLockIdOrBuilder() {
      return getLockId();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (address_ != null) {
        output.writeMessage(1, getAddress());
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      if (lockId_ != null) {
        output.writeMessage(3, getLockId());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (address_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAddress());
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      if (lockId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLockId());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetLockedAmountInput)) {
        return super.equals(obj);
      }
      GetLockedAmountInput other = (GetLockedAmountInput) obj;

      if (hasAddress() != other.hasAddress()) return false;
      if (hasAddress()) {
        if (!getAddress()
            .equals(other.getAddress())) return false;
      }
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasLockId() != other.hasLockId()) return false;
      if (hasLockId()) {
        if (!getLockId()
            .equals(other.getLockId())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasLockId()) {
        hash = (37 * hash) + LOCK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLockId().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetLockedAmountInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetLockedAmountInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetLockedAmountInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetLockedAmountInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetLockedAmountInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetLockedAmountInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetLockedAmountInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetLockedAmountInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetLockedAmountInput)
        GetLockedAmountInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetLockedAmountInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetLockedAmountInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetLockedAmountInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetLockedAmountInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (addressBuilder_ == null) {
          address_ = null;
        } else {
          address_ = null;
          addressBuilder_ = null;
        }
        symbol_ = "";

        if (lockIdBuilder_ == null) {
          lockId_ = null;
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetLockedAmountInput_descriptor;
      }

      @Override
      public GetLockedAmountInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetLockedAmountInput build() {
        GetLockedAmountInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetLockedAmountInput buildPartial() {
        GetLockedAmountInput result = new GetLockedAmountInput(this);
        if (addressBuilder_ == null) {
          result.address_ = address_;
        } else {
          result.address_ = addressBuilder_.build();
        }
        result.symbol_ = symbol_;
        if (lockIdBuilder_ == null) {
          result.lockId_ = lockId_;
        } else {
          result.lockId_ = lockIdBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetLockedAmountInput) {
          return mergeFrom((GetLockedAmountInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetLockedAmountInput other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasLockId()) {
          mergeLockId(other.getLockId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetLockedAmountInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetLockedAmountInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Client.Address address_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> addressBuilder_;
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return Whether the address field is set.
       */
      public boolean hasAddress() {
        return addressBuilder_ != null || address_ != null;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return The address.
       */
      public Client.Address getAddress() {
        if (addressBuilder_ == null) {
          return address_ == null ? Client.Address.getDefaultInstance() : address_;
        } else {
          return addressBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          address_ = value;
          onChanged();
        } else {
          addressBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(
          Client.Address.Builder builderForValue) {
        if (addressBuilder_ == null) {
          address_ = builderForValue.build();
          onChanged();
        } else {
          addressBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder mergeAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (address_ != null) {
            address_ =
              Client.Address.newBuilder(address_).mergeFrom(value).buildPartial();
          } else {
            address_ = value;
          }
          onChanged();
        } else {
          addressBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder clearAddress() {
        if (addressBuilder_ == null) {
          address_ = null;
          onChanged();
        } else {
          address_ = null;
          addressBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.Address.Builder getAddressBuilder() {
        
        onChanged();
        return getAddressFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.AddressOrBuilder getAddressOrBuilder() {
        if (addressBuilder_ != null) {
          return addressBuilder_.getMessageOrBuilder();
        } else {
          return address_ == null ?
              Client.Address.getDefaultInstance() : address_;
        }
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getAddressFieldBuilder() {
        if (addressBuilder_ == null) {
          addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getAddress(),
                  getParentForChildren(),
                  isClean());
          address_ = null;
        }
        return addressBuilder_;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Hash lockId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder> lockIdBuilder_;
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       * @return Whether the lockId field is set.
       */
      public boolean hasLockId() {
        return lockIdBuilder_ != null || lockId_ != null;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       * @return The lockId.
       */
      public Client.Hash getLockId() {
        if (lockIdBuilder_ == null) {
          return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
        } else {
          return lockIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder setLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lockId_ = value;
          onChanged();
        } else {
          lockIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder setLockId(
          Client.Hash.Builder builderForValue) {
        if (lockIdBuilder_ == null) {
          lockId_ = builderForValue.build();
          onChanged();
        } else {
          lockIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder mergeLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (lockId_ != null) {
            lockId_ =
              Client.Hash.newBuilder(lockId_).mergeFrom(value).buildPartial();
          } else {
            lockId_ = value;
          }
          onChanged();
        } else {
          lockIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder clearLockId() {
        if (lockIdBuilder_ == null) {
          lockId_ = null;
          onChanged();
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Client.Hash.Builder getLockIdBuilder() {
        
        onChanged();
        return getLockIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Client.HashOrBuilder getLockIdOrBuilder() {
        if (lockIdBuilder_ != null) {
          return lockIdBuilder_.getMessageOrBuilder();
        } else {
          return lockId_ == null ?
              Client.Hash.getDefaultInstance() : lockId_;
        }
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>
          getLockIdFieldBuilder() {
        if (lockIdBuilder_ == null) {
          lockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>(
                  getLockId(),
                  getParentForChildren(),
                  isClean());
          lockId_ = null;
        }
        return lockIdBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetLockedAmountInput)
    }

    // @@protoc_insertion_point(class_scope:GetLockedAmountInput)
    private static final GetLockedAmountInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetLockedAmountInput();
    }

    public static GetLockedAmountInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLockedAmountInput>
        PARSER = new com.google.protobuf.AbstractParser<GetLockedAmountInput>() {
      @Override
      public GetLockedAmountInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLockedAmountInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLockedAmountInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetLockedAmountInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetLockedAmountInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLockedAmountOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetLockedAmountOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    boolean hasAddress();
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    Client.Address getAddress();
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    Client.AddressOrBuilder getAddressOrBuilder();

    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return Whether the lockId field is set.
     */
    boolean hasLockId();
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return The lockId.
     */
    Client.Hash getLockId();
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     */
    Client.HashOrBuilder getLockIdOrBuilder();

    /**
     * <pre>
     * The locked amount.
     * </pre>
     *
     * <code>int64 amount = 4;</code>
     * @return The amount.
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code GetLockedAmountOutput}
   */
  public  static final class GetLockedAmountOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetLockedAmountOutput)
      GetLockedAmountOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLockedAmountOutput.newBuilder() to construct.
    private GetLockedAmountOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLockedAmountOutput() {
      symbol_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLockedAmountOutput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLockedAmountOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Client.Address.Builder subBuilder = null;
              if (address_ != null) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 26: {
              Client.Hash.Builder subBuilder = null;
              if (lockId_ != null) {
                subBuilder = lockId_.toBuilder();
              }
              lockId_ = input.readMessage(Client.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lockId_);
                lockId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              amount_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetLockedAmountOutput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetLockedAmountOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetLockedAmountOutput.class, Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    private Client.Address address_;
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return address_ != null;
    }
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    public Client.Address getAddress() {
      return address_ == null ? Client.Address.getDefaultInstance() : address_;
    }
    /**
     * <pre>
     * The address of the lock.
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    public Client.AddressOrBuilder getAddressOrBuilder() {
      return getAddress();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile Object symbol_;
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The token symbol.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCK_ID_FIELD_NUMBER = 3;
    private Client.Hash lockId_;
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return Whether the lockId field is set.
     */
    public boolean hasLockId() {
      return lockId_ != null;
    }
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     * @return The lockId.
     */
    public Client.Hash getLockId() {
      return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
    }
    /**
     * <pre>
     * The id of the lock.
     * </pre>
     *
     * <code>.Hash lock_id = 3;</code>
     */
    public Client.HashOrBuilder getLockIdOrBuilder() {
      return getLockId();
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private long amount_;
    /**
     * <pre>
     * The locked amount.
     * </pre>
     *
     * <code>int64 amount = 4;</code>
     * @return The amount.
     */
    public long getAmount() {
      return amount_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (address_ != null) {
        output.writeMessage(1, getAddress());
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      if (lockId_ != null) {
        output.writeMessage(3, getLockId());
      }
      if (amount_ != 0L) {
        output.writeInt64(4, amount_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (address_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAddress());
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      if (lockId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLockId());
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetLockedAmountOutput)) {
        return super.equals(obj);
      }
      GetLockedAmountOutput other = (GetLockedAmountOutput) obj;

      if (hasAddress() != other.hasAddress()) return false;
      if (hasAddress()) {
        if (!getAddress()
            .equals(other.getAddress())) return false;
      }
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (hasLockId() != other.hasLockId()) return false;
      if (hasLockId()) {
        if (!getLockId()
            .equals(other.getLockId())) return false;
      }
      if (getAmount()
          != other.getAmount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (hasLockId()) {
        hash = (37 * hash) + LOCK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLockId().hashCode();
      }
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetLockedAmountOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetLockedAmountOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetLockedAmountOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetLockedAmountOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetLockedAmountOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetLockedAmountOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetLockedAmountOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetLockedAmountOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetLockedAmountOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetLockedAmountOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetLockedAmountOutput)
        GetLockedAmountOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetLockedAmountOutput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetLockedAmountOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetLockedAmountOutput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetLockedAmountOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (addressBuilder_ == null) {
          address_ = null;
        } else {
          address_ = null;
          addressBuilder_ = null;
        }
        symbol_ = "";

        if (lockIdBuilder_ == null) {
          lockId_ = null;
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }
        amount_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetLockedAmountOutput_descriptor;
      }

      @Override
      public GetLockedAmountOutput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetLockedAmountOutput build() {
        GetLockedAmountOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetLockedAmountOutput buildPartial() {
        GetLockedAmountOutput result = new GetLockedAmountOutput(this);
        if (addressBuilder_ == null) {
          result.address_ = address_;
        } else {
          result.address_ = addressBuilder_.build();
        }
        result.symbol_ = symbol_;
        if (lockIdBuilder_ == null) {
          result.lockId_ = lockId_;
        } else {
          result.lockId_ = lockIdBuilder_.build();
        }
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetLockedAmountOutput) {
          return mergeFrom((GetLockedAmountOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetLockedAmountOutput other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasLockId()) {
          mergeLockId(other.getLockId());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetLockedAmountOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetLockedAmountOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Client.Address address_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> addressBuilder_;
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return Whether the address field is set.
       */
      public boolean hasAddress() {
        return addressBuilder_ != null || address_ != null;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return The address.
       */
      public Client.Address getAddress() {
        if (addressBuilder_ == null) {
          return address_ == null ? Client.Address.getDefaultInstance() : address_;
        } else {
          return addressBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          address_ = value;
          onChanged();
        } else {
          addressBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(
          Client.Address.Builder builderForValue) {
        if (addressBuilder_ == null) {
          address_ = builderForValue.build();
          onChanged();
        } else {
          addressBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder mergeAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (address_ != null) {
            address_ =
              Client.Address.newBuilder(address_).mergeFrom(value).buildPartial();
          } else {
            address_ = value;
          }
          onChanged();
        } else {
          addressBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder clearAddress() {
        if (addressBuilder_ == null) {
          address_ = null;
          onChanged();
        } else {
          address_ = null;
          addressBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.Address.Builder getAddressBuilder() {
        
        onChanged();
        return getAddressFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.AddressOrBuilder getAddressOrBuilder() {
        if (addressBuilder_ != null) {
          return addressBuilder_.getMessageOrBuilder();
        } else {
          return address_ == null ?
              Client.Address.getDefaultInstance() : address_;
        }
      }
      /**
       * <pre>
       * The address of the lock.
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getAddressFieldBuilder() {
        if (addressBuilder_ == null) {
          addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getAddress(),
                  getParentForChildren(),
                  isClean());
          address_ = null;
        }
        return addressBuilder_;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private Client.Hash lockId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder> lockIdBuilder_;
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       * @return Whether the lockId field is set.
       */
      public boolean hasLockId() {
        return lockIdBuilder_ != null || lockId_ != null;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       * @return The lockId.
       */
      public Client.Hash getLockId() {
        if (lockIdBuilder_ == null) {
          return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
        } else {
          return lockIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder setLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lockId_ = value;
          onChanged();
        } else {
          lockIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder setLockId(
          Client.Hash.Builder builderForValue) {
        if (lockIdBuilder_ == null) {
          lockId_ = builderForValue.build();
          onChanged();
        } else {
          lockIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder mergeLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (lockId_ != null) {
            lockId_ =
              Client.Hash.newBuilder(lockId_).mergeFrom(value).buildPartial();
          } else {
            lockId_ = value;
          }
          onChanged();
        } else {
          lockIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Builder clearLockId() {
        if (lockIdBuilder_ == null) {
          lockId_ = null;
          onChanged();
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Client.Hash.Builder getLockIdBuilder() {
        
        onChanged();
        return getLockIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      public Client.HashOrBuilder getLockIdOrBuilder() {
        if (lockIdBuilder_ != null) {
          return lockIdBuilder_.getMessageOrBuilder();
        } else {
          return lockId_ == null ?
              Client.Hash.getDefaultInstance() : lockId_;
        }
      }
      /**
       * <pre>
       * The id of the lock.
       * </pre>
       *
       * <code>.Hash lock_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>
          getLockIdFieldBuilder() {
        if (lockIdBuilder_ == null) {
          lockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>(
                  getLockId(),
                  getParentForChildren(),
                  isClean());
          lockId_ = null;
        }
        return lockIdBuilder_;
      }

      private long amount_ ;
      /**
       * <pre>
       * The locked amount.
       * </pre>
       *
       * <code>int64 amount = 4;</code>
       * @return The amount.
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * The locked amount.
       * </pre>
       *
       * <code>int64 amount = 4;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The locked amount.
       * </pre>
       *
       * <code>int64 amount = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetLockedAmountOutput)
    }

    // @@protoc_insertion_point(class_scope:GetLockedAmountOutput)
    private static final GetLockedAmountOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetLockedAmountOutput();
    }

    public static GetLockedAmountOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLockedAmountOutput>
        PARSER = new com.google.protobuf.AbstractParser<GetLockedAmountOutput>() {
      @Override
      public GetLockedAmountOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLockedAmountOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLockedAmountOutput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetLockedAmountOutput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetLockedAmountOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetVirtualAddressForLockingInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetVirtualAddressForLockingInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    boolean hasAddress();
    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    Client.Address getAddress();
    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    Client.AddressOrBuilder getAddressOrBuilder();

    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     * @return Whether the lockId field is set.
     */
    boolean hasLockId();
    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     * @return The lockId.
     */
    Client.Hash getLockId();
    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     */
    Client.HashOrBuilder getLockIdOrBuilder();
  }
  /**
   * Protobuf type {@code GetVirtualAddressForLockingInput}
   */
  public  static final class GetVirtualAddressForLockingInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetVirtualAddressForLockingInput)
      GetVirtualAddressForLockingInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetVirtualAddressForLockingInput.newBuilder() to construct.
    private GetVirtualAddressForLockingInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetVirtualAddressForLockingInput() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetVirtualAddressForLockingInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetVirtualAddressForLockingInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Client.Address.Builder subBuilder = null;
              if (address_ != null) {
                subBuilder = address_.toBuilder();
              }
              address_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(address_);
                address_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              Client.Hash.Builder subBuilder = null;
              if (lockId_ != null) {
                subBuilder = lockId_.toBuilder();
              }
              lockId_ = input.readMessage(Client.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lockId_);
                lockId_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetVirtualAddressForLockingInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetVirtualAddressForLockingInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetVirtualAddressForLockingInput.class, Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    private Client.Address address_;
    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return address_ != null;
    }
    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     * @return The address.
     */
    public Client.Address getAddress() {
      return address_ == null ? Client.Address.getDefaultInstance() : address_;
    }
    /**
     * <pre>
     * The address of the lock. 
     * </pre>
     *
     * <code>.Address address = 1;</code>
     */
    public Client.AddressOrBuilder getAddressOrBuilder() {
      return getAddress();
    }

    public static final int LOCK_ID_FIELD_NUMBER = 2;
    private Client.Hash lockId_;
    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     * @return Whether the lockId field is set.
     */
    public boolean hasLockId() {
      return lockId_ != null;
    }
    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     * @return The lockId.
     */
    public Client.Hash getLockId() {
      return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
    }
    /**
     * <pre>
     * The id of the lock. 
     * </pre>
     *
     * <code>.Hash lock_id = 2;</code>
     */
    public Client.HashOrBuilder getLockIdOrBuilder() {
      return getLockId();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (address_ != null) {
        output.writeMessage(1, getAddress());
      }
      if (lockId_ != null) {
        output.writeMessage(2, getLockId());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (address_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAddress());
      }
      if (lockId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLockId());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetVirtualAddressForLockingInput)) {
        return super.equals(obj);
      }
      GetVirtualAddressForLockingInput other = (GetVirtualAddressForLockingInput) obj;

      if (hasAddress() != other.hasAddress()) return false;
      if (hasAddress()) {
        if (!getAddress()
            .equals(other.getAddress())) return false;
      }
      if (hasLockId() != other.hasLockId()) return false;
      if (hasLockId()) {
        if (!getLockId()
            .equals(other.getLockId())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      if (hasLockId()) {
        hash = (37 * hash) + LOCK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLockId().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetVirtualAddressForLockingInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetVirtualAddressForLockingInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetVirtualAddressForLockingInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetVirtualAddressForLockingInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetVirtualAddressForLockingInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetVirtualAddressForLockingInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetVirtualAddressForLockingInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetVirtualAddressForLockingInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetVirtualAddressForLockingInput)
        GetVirtualAddressForLockingInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetVirtualAddressForLockingInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetVirtualAddressForLockingInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetVirtualAddressForLockingInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetVirtualAddressForLockingInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (addressBuilder_ == null) {
          address_ = null;
        } else {
          address_ = null;
          addressBuilder_ = null;
        }
        if (lockIdBuilder_ == null) {
          lockId_ = null;
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetVirtualAddressForLockingInput_descriptor;
      }

      @Override
      public GetVirtualAddressForLockingInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetVirtualAddressForLockingInput build() {
        GetVirtualAddressForLockingInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetVirtualAddressForLockingInput buildPartial() {
        GetVirtualAddressForLockingInput result = new GetVirtualAddressForLockingInput(this);
        if (addressBuilder_ == null) {
          result.address_ = address_;
        } else {
          result.address_ = addressBuilder_.build();
        }
        if (lockIdBuilder_ == null) {
          result.lockId_ = lockId_;
        } else {
          result.lockId_ = lockIdBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetVirtualAddressForLockingInput) {
          return mergeFrom((GetVirtualAddressForLockingInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetVirtualAddressForLockingInput other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasAddress()) {
          mergeAddress(other.getAddress());
        }
        if (other.hasLockId()) {
          mergeLockId(other.getLockId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetVirtualAddressForLockingInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetVirtualAddressForLockingInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Client.Address address_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> addressBuilder_;
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return Whether the address field is set.
       */
      public boolean hasAddress() {
        return addressBuilder_ != null || address_ != null;
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       * @return The address.
       */
      public Client.Address getAddress() {
        if (addressBuilder_ == null) {
          return address_ == null ? Client.Address.getDefaultInstance() : address_;
        } else {
          return addressBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          address_ = value;
          onChanged();
        } else {
          addressBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder setAddress(
          Client.Address.Builder builderForValue) {
        if (addressBuilder_ == null) {
          address_ = builderForValue.build();
          onChanged();
        } else {
          addressBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder mergeAddress(Client.Address value) {
        if (addressBuilder_ == null) {
          if (address_ != null) {
            address_ =
              Client.Address.newBuilder(address_).mergeFrom(value).buildPartial();
          } else {
            address_ = value;
          }
          onChanged();
        } else {
          addressBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Builder clearAddress() {
        if (addressBuilder_ == null) {
          address_ = null;
          onChanged();
        } else {
          address_ = null;
          addressBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.Address.Builder getAddressBuilder() {
        
        onChanged();
        return getAddressFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      public Client.AddressOrBuilder getAddressOrBuilder() {
        if (addressBuilder_ != null) {
          return addressBuilder_.getMessageOrBuilder();
        } else {
          return address_ == null ?
              Client.Address.getDefaultInstance() : address_;
        }
      }
      /**
       * <pre>
       * The address of the lock. 
       * </pre>
       *
       * <code>.Address address = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getAddressFieldBuilder() {
        if (addressBuilder_ == null) {
          addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getAddress(),
                  getParentForChildren(),
                  isClean());
          address_ = null;
        }
        return addressBuilder_;
      }

      private Client.Hash lockId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder> lockIdBuilder_;
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       * @return Whether the lockId field is set.
       */
      public boolean hasLockId() {
        return lockIdBuilder_ != null || lockId_ != null;
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       * @return The lockId.
       */
      public Client.Hash getLockId() {
        if (lockIdBuilder_ == null) {
          return lockId_ == null ? Client.Hash.getDefaultInstance() : lockId_;
        } else {
          return lockIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Builder setLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lockId_ = value;
          onChanged();
        } else {
          lockIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Builder setLockId(
          Client.Hash.Builder builderForValue) {
        if (lockIdBuilder_ == null) {
          lockId_ = builderForValue.build();
          onChanged();
        } else {
          lockIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Builder mergeLockId(Client.Hash value) {
        if (lockIdBuilder_ == null) {
          if (lockId_ != null) {
            lockId_ =
              Client.Hash.newBuilder(lockId_).mergeFrom(value).buildPartial();
          } else {
            lockId_ = value;
          }
          onChanged();
        } else {
          lockIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Builder clearLockId() {
        if (lockIdBuilder_ == null) {
          lockId_ = null;
          onChanged();
        } else {
          lockId_ = null;
          lockIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Client.Hash.Builder getLockIdBuilder() {
        
        onChanged();
        return getLockIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      public Client.HashOrBuilder getLockIdOrBuilder() {
        if (lockIdBuilder_ != null) {
          return lockIdBuilder_.getMessageOrBuilder();
        } else {
          return lockId_ == null ?
              Client.Hash.getDefaultInstance() : lockId_;
        }
      }
      /**
       * <pre>
       * The id of the lock. 
       * </pre>
       *
       * <code>.Hash lock_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>
          getLockIdFieldBuilder() {
        if (lockIdBuilder_ == null) {
          lockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Hash, Client.Hash.Builder, Client.HashOrBuilder>(
                  getLockId(),
                  getParentForChildren(),
                  isClean());
          lockId_ = null;
        }
        return lockIdBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetVirtualAddressForLockingInput)
    }

    // @@protoc_insertion_point(class_scope:GetVirtualAddressForLockingInput)
    private static final GetVirtualAddressForLockingInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetVirtualAddressForLockingInput();
    }

    public static GetVirtualAddressForLockingInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetVirtualAddressForLockingInput>
        PARSER = new com.google.protobuf.AbstractParser<GetVirtualAddressForLockingInput>() {
      @Override
      public GetVirtualAddressForLockingInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetVirtualAddressForLockingInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetVirtualAddressForLockingInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetVirtualAddressForLockingInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetVirtualAddressForLockingInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetCrossChainTransferTokenContractAddressInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetCrossChainTransferTokenContractAddressInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The chain id.
     * </pre>
     *
     * <code>int32 chainId = 1;</code>
     * @return The chainId.
     */
    int getChainId();
  }
  /**
   * Protobuf type {@code GetCrossChainTransferTokenContractAddressInput}
   */
  public  static final class GetCrossChainTransferTokenContractAddressInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetCrossChainTransferTokenContractAddressInput)
      GetCrossChainTransferTokenContractAddressInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetCrossChainTransferTokenContractAddressInput.newBuilder() to construct.
    private GetCrossChainTransferTokenContractAddressInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetCrossChainTransferTokenContractAddressInput() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetCrossChainTransferTokenContractAddressInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetCrossChainTransferTokenContractAddressInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              chainId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_GetCrossChainTransferTokenContractAddressInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetCrossChainTransferTokenContractAddressInput.class, Builder.class);
    }

    public static final int CHAINID_FIELD_NUMBER = 1;
    private int chainId_;
    /**
     * <pre>
     * The chain id.
     * </pre>
     *
     * <code>int32 chainId = 1;</code>
     * @return The chainId.
     */
    public int getChainId() {
      return chainId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chainId_ != 0) {
        output.writeInt32(1, chainId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chainId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chainId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GetCrossChainTransferTokenContractAddressInput)) {
        return super.equals(obj);
      }
      GetCrossChainTransferTokenContractAddressInput other = (GetCrossChainTransferTokenContractAddressInput) obj;

      if (getChainId()
          != other.getChainId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHAINID_FIELD_NUMBER;
      hash = (53 * hash) + getChainId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GetCrossChainTransferTokenContractAddressInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetCrossChainTransferTokenContractAddressInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetCrossChainTransferTokenContractAddressInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetCrossChainTransferTokenContractAddressInput)
        GetCrossChainTransferTokenContractAddressInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_GetCrossChainTransferTokenContractAddressInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetCrossChainTransferTokenContractAddressInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.GetCrossChainTransferTokenContractAddressInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        chainId_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor;
      }

      @Override
      public GetCrossChainTransferTokenContractAddressInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public GetCrossChainTransferTokenContractAddressInput build() {
        GetCrossChainTransferTokenContractAddressInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GetCrossChainTransferTokenContractAddressInput buildPartial() {
        GetCrossChainTransferTokenContractAddressInput result = new GetCrossChainTransferTokenContractAddressInput(this);
        result.chainId_ = chainId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetCrossChainTransferTokenContractAddressInput) {
          return mergeFrom((GetCrossChainTransferTokenContractAddressInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetCrossChainTransferTokenContractAddressInput other) {
        if (other == getDefaultInstance()) return this;
        if (other.getChainId() != 0) {
          setChainId(other.getChainId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetCrossChainTransferTokenContractAddressInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetCrossChainTransferTokenContractAddressInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int chainId_ ;
      /**
       * <pre>
       * The chain id.
       * </pre>
       *
       * <code>int32 chainId = 1;</code>
       * @return The chainId.
       */
      public int getChainId() {
        return chainId_;
      }
      /**
       * <pre>
       * The chain id.
       * </pre>
       *
       * <code>int32 chainId = 1;</code>
       * @param value The chainId to set.
       * @return This builder for chaining.
       */
      public Builder setChainId(int value) {
        
        chainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The chain id.
       * </pre>
       *
       * <code>int32 chainId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChainId() {
        
        chainId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetCrossChainTransferTokenContractAddressInput)
    }

    // @@protoc_insertion_point(class_scope:GetCrossChainTransferTokenContractAddressInput)
    private static final GetCrossChainTransferTokenContractAddressInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetCrossChainTransferTokenContractAddressInput();
    }

    public static GetCrossChainTransferTokenContractAddressInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetCrossChainTransferTokenContractAddressInput>
        PARSER = new com.google.protobuf.AbstractParser<GetCrossChainTransferTokenContractAddressInput>() {
      @Override
      public GetCrossChainTransferTokenContractAddressInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetCrossChainTransferTokenContractAddressInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetCrossChainTransferTokenContractAddressInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetCrossChainTransferTokenContractAddressInput> getParserForType() {
      return PARSER;
    }

    @Override
    public GetCrossChainTransferTokenContractAddressInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransferInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TransferInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     * @return Whether the to field is set.
     */
    boolean hasTo();
    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     * @return The to.
     */
    Client.Address getTo();
    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     */
    Client.AddressOrBuilder getToOrBuilder();

    /**
     * <pre>
     * The token symbol to transfer.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * The token symbol to transfer.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The amount to to transfer.
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * The memo.
     * </pre>
     *
     * <code>string memo = 4;</code>
     * @return The memo.
     */
    String getMemo();
    /**
     * <pre>
     * The memo.
     * </pre>
     *
     * <code>string memo = 4;</code>
     * @return The bytes for memo.
     */
    com.google.protobuf.ByteString
        getMemoBytes();
  }
  /**
   * Protobuf type {@code TransferInput}
   */
  public  static final class TransferInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TransferInput)
      TransferInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransferInput.newBuilder() to construct.
    private TransferInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransferInput() {
      symbol_ = "";
      memo_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransferInput();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransferInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Client.Address.Builder subBuilder = null;
              if (to_ != null) {
                subBuilder = to_.toBuilder();
              }
              to_ = input.readMessage(Client.Address.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(to_);
                to_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 24: {

              amount_ = input.readInt64();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              memo_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_TransferInput_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_TransferInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TransferInput.class, Builder.class);
    }

    public static final int TO_FIELD_NUMBER = 1;
    private Client.Address to_;
    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     * @return Whether the to field is set.
     */
    public boolean hasTo() {
      return to_ != null;
    }
    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     * @return The to.
     */
    public Client.Address getTo() {
      return to_ == null ? Client.Address.getDefaultInstance() : to_;
    }
    /**
     * <pre>
     * The receiver of the token.
     * </pre>
     *
     * <code>.Address to = 1;</code>
     */
    public Client.AddressOrBuilder getToOrBuilder() {
      return getTo();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile Object symbol_;
    /**
     * <pre>
     * The token symbol to transfer.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The token symbol to transfer.
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * The amount to to transfer.
     * </pre>
     *
     * <code>int64 amount = 3;</code>
     * @return The amount.
     */
    public long getAmount() {
      return amount_;
    }

    public static final int MEMO_FIELD_NUMBER = 4;
    private volatile Object memo_;
    /**
     * <pre>
     * The memo.
     * </pre>
     *
     * <code>string memo = 4;</code>
     * @return The memo.
     */
    public String getMemo() {
      Object ref = memo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        memo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The memo.
     * </pre>
     *
     * <code>string memo = 4;</code>
     * @return The bytes for memo.
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      Object ref = memo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        memo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (to_ != null) {
        output.writeMessage(1, getTo());
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      if (amount_ != 0L) {
        output.writeInt64(3, amount_);
      }
      if (!getMemoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, memo_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (to_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTo());
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, amount_);
      }
      if (!getMemoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, memo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TransferInput)) {
        return super.equals(obj);
      }
      TransferInput other = (TransferInput) obj;

      if (hasTo() != other.hasTo()) return false;
      if (hasTo()) {
        if (!getTo()
            .equals(other.getTo())) return false;
      }
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (!getMemo()
          .equals(other.getMemo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTo()) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getTo().hashCode();
      }
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + MEMO_FIELD_NUMBER;
      hash = (53 * hash) + getMemo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TransferInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransferInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransferInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransferInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransferInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TransferInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TransferInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransferInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransferInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TransferInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TransferInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TransferInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TransferInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TransferInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TransferInput)
        TransferInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return internal_static_TransferInput_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return internal_static_TransferInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TransferInput.class, Builder.class);
      }

      // Construct using io.aelf.protobuf.generated.TokenContract.TransferInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (toBuilder_ == null) {
          to_ = null;
        } else {
          to_ = null;
          toBuilder_ = null;
        }
        symbol_ = "";

        amount_ = 0L;

        memo_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return internal_static_TransferInput_descriptor;
      }

      @Override
      public TransferInput getDefaultInstanceForType() {
        return getDefaultInstance();
      }

      @Override
      public TransferInput build() {
        TransferInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TransferInput buildPartial() {
        TransferInput result = new TransferInput(this);
        if (toBuilder_ == null) {
          result.to_ = to_;
        } else {
          result.to_ = toBuilder_.build();
        }
        result.symbol_ = symbol_;
        result.amount_ = amount_;
        result.memo_ = memo_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TransferInput) {
          return mergeFrom((TransferInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TransferInput other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasTo()) {
          mergeTo(other.getTo());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (!other.getMemo().isEmpty()) {
          memo_ = other.memo_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TransferInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TransferInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Client.Address to_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder> toBuilder_;
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       * @return Whether the to field is set.
       */
      public boolean hasTo() {
        return toBuilder_ != null || to_ != null;
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       * @return The to.
       */
      public Client.Address getTo() {
        if (toBuilder_ == null) {
          return to_ == null ? Client.Address.getDefaultInstance() : to_;
        } else {
          return toBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Builder setTo(Client.Address value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          to_ = value;
          onChanged();
        } else {
          toBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Builder setTo(
          Client.Address.Builder builderForValue) {
        if (toBuilder_ == null) {
          to_ = builderForValue.build();
          onChanged();
        } else {
          toBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Builder mergeTo(Client.Address value) {
        if (toBuilder_ == null) {
          if (to_ != null) {
            to_ =
              Client.Address.newBuilder(to_).mergeFrom(value).buildPartial();
          } else {
            to_ = value;
          }
          onChanged();
        } else {
          toBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = null;
          onChanged();
        } else {
          to_ = null;
          toBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Client.Address.Builder getToBuilder() {
        
        onChanged();
        return getToFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      public Client.AddressOrBuilder getToOrBuilder() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilder();
        } else {
          return to_ == null ?
              Client.Address.getDefaultInstance() : to_;
        }
      }
      /**
       * <pre>
       * The receiver of the token.
       * </pre>
       *
       * <code>.Address to = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Client.Address, Client.Address.Builder, Client.AddressOrBuilder>
          getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Client.Address, Client.Address.Builder, Client.AddressOrBuilder>(
                  getTo(),
                  getParentForChildren(),
                  isClean());
          to_ = null;
        }
        return toBuilder_;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * The token symbol to transfer.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The token symbol to transfer.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The token symbol to transfer.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol to transfer.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol to transfer.
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * The amount to to transfer.
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return The amount.
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * The amount to to transfer.
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amount to to transfer.
       * </pre>
       *
       * <code>int64 amount = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }

      private Object memo_ = "";
      /**
       * <pre>
       * The memo.
       * </pre>
       *
       * <code>string memo = 4;</code>
       * @return The memo.
       */
      public String getMemo() {
        Object ref = memo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          memo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The memo.
       * </pre>
       *
       * <code>string memo = 4;</code>
       * @return The bytes for memo.
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        Object ref = memo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          memo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The memo.
       * </pre>
       *
       * <code>string memo = 4;</code>
       * @param value The memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        memo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The memo.
       * </pre>
       *
       * <code>string memo = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemo() {
        
        memo_ = getDefaultInstance().getMemo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The memo.
       * </pre>
       *
       * <code>string memo = 4;</code>
       * @param value The bytes for memo to set.
       * @return This builder for chaining.
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        memo_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TransferInput)
    }

    // @@protoc_insertion_point(class_scope:TransferInput)
    private static final TransferInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TransferInput();
    }

    public static TransferInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransferInput>
        PARSER = new com.google.protobuf.AbstractParser<TransferInput>() {
      @Override
      public TransferInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransferInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransferInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TransferInput> getParserForType() {
      return PARSER;
    }

    @Override
    public TransferInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TokenInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TokenInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetTokenInfoInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetTokenInfoInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TokenInfoList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TokenInfoList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetBalanceInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetBalanceInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetBalanceOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetBalanceOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetAllowanceInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetAllowanceInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetAllowanceOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetAllowanceOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IsInWhiteListInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IsInWhiteListInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetLockedAmountInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetLockedAmountInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetLockedAmountOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetLockedAmountOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetVirtualAddressForLockingInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetVirtualAddressForLockingInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetCrossChainTransferTokenContractAddressInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TransferInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TransferInput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024token_contract.proto\032\014client.proto\"\276\001\n" +
      "\tTokenInfo\022\016\n\006symbol\030\001 \001(\t\022\022\n\ntoken_name" +
      "\030\002 \001(\t\022\016\n\006supply\030\003 \001(\003\022\024\n\014total_supply\030\004" +
      " \001(\003\022\020\n\010decimals\030\005 \001(\005\022\030\n\006issuer\030\006 \001(\0132\010" +
      ".Address\022\023\n\013is_burnable\030\007 \001(\010\022\026\n\016issue_c" +
      "hain_id\030\010 \001(\005\022\016\n\006issued\030\t \001(\003\"#\n\021GetToke" +
      "nInfoInput\022\016\n\006symbol\030\001 \001(\t\"*\n\rTokenInfoL" +
      "ist\022\031\n\005value\030\001 \003(\0132\n.TokenInfo\":\n\017GetBal" +
      "anceInput\022\016\n\006symbol\030\001 \001(\t\022\027\n\005owner\030\002 \001(\013" +
      "2\010.Address\"L\n\020GetBalanceOutput\022\016\n\006symbol" +
      "\030\001 \001(\t\022\027\n\005owner\030\002 \001(\0132\010.Address\022\017\n\007balan" +
      "ce\030\003 \001(\003\"W\n\021GetAllowanceInput\022\016\n\006symbol\030" +
      "\001 \001(\t\022\027\n\005owner\030\002 \001(\0132\010.Address\022\031\n\007spende" +
      "r\030\003 \001(\0132\010.Address\"k\n\022GetAllowanceOutput\022" +
      "\016\n\006symbol\030\001 \001(\t\022\027\n\005owner\030\002 \001(\0132\010.Address" +
      "\022\031\n\007spender\030\003 \001(\0132\010.Address\022\021\n\tallowance" +
      "\030\004 \001(\003\"?\n\022IsInWhiteListInput\022\016\n\006symbol\030\001" +
      " \001(\t\022\031\n\007address\030\002 \001(\0132\010.Address\"Y\n\024GetLo" +
      "ckedAmountInput\022\031\n\007address\030\001 \001(\0132\010.Addre" +
      "ss\022\016\n\006symbol\030\002 \001(\t\022\026\n\007lock_id\030\003 \001(\0132\005.Ha" +
      "sh\"j\n\025GetLockedAmountOutput\022\031\n\007address\030\001" +
      " \001(\0132\010.Address\022\016\n\006symbol\030\002 \001(\t\022\026\n\007lock_i" +
      "d\030\003 \001(\0132\005.Hash\022\016\n\006amount\030\004 \001(\003\"U\n GetVir" +
      "tualAddressForLockingInput\022\031\n\007address\030\001 " +
      "\001(\0132\010.Address\022\026\n\007lock_id\030\002 \001(\0132\005.Hash\"A\n" +
      ".GetCrossChainTransferTokenContractAddre" +
      "ssInput\022\017\n\007chainId\030\001 \001(\005\"S\n\rTransferInpu" +
      "t\022\024\n\002to\030\001 \001(\0132\010.Address\022\016\n\006symbol\030\002 \001(\t\022" +
      "\016\n\006amount\030\003 \001(\003\022\014\n\004memo\030\004 \001(\tB\034\n\032io.aelf" +
      ".protobuf.generatedb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Client.getDescriptor(),
        });
    internal_static_TokenInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TokenInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TokenInfo_descriptor,
        new String[] { "Symbol", "TokenName", "Supply", "TotalSupply", "Decimals", "Issuer", "IsBurnable", "IssueChainId", "Issued", });
    internal_static_GetTokenInfoInput_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GetTokenInfoInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetTokenInfoInput_descriptor,
        new String[] { "Symbol", });
    internal_static_TokenInfoList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TokenInfoList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TokenInfoList_descriptor,
        new String[] { "Value", });
    internal_static_GetBalanceInput_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_GetBalanceInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetBalanceInput_descriptor,
        new String[] { "Symbol", "Owner", });
    internal_static_GetBalanceOutput_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_GetBalanceOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetBalanceOutput_descriptor,
        new String[] { "Symbol", "Owner", "Balance", });
    internal_static_GetAllowanceInput_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_GetAllowanceInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetAllowanceInput_descriptor,
        new String[] { "Symbol", "Owner", "Spender", });
    internal_static_GetAllowanceOutput_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_GetAllowanceOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetAllowanceOutput_descriptor,
        new String[] { "Symbol", "Owner", "Spender", "Allowance", });
    internal_static_IsInWhiteListInput_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_IsInWhiteListInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IsInWhiteListInput_descriptor,
        new String[] { "Symbol", "Address", });
    internal_static_GetLockedAmountInput_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_GetLockedAmountInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetLockedAmountInput_descriptor,
        new String[] { "Address", "Symbol", "LockId", });
    internal_static_GetLockedAmountOutput_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_GetLockedAmountOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetLockedAmountOutput_descriptor,
        new String[] { "Address", "Symbol", "LockId", "Amount", });
    internal_static_GetVirtualAddressForLockingInput_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_GetVirtualAddressForLockingInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetVirtualAddressForLockingInput_descriptor,
        new String[] { "Address", "LockId", });
    internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_GetCrossChainTransferTokenContractAddressInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetCrossChainTransferTokenContractAddressInput_descriptor,
        new String[] { "ChainId", });
    internal_static_TransferInput_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_TransferInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TransferInput_descriptor,
        new String[] { "To", "Symbol", "Amount", "Memo", });
    Client.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
